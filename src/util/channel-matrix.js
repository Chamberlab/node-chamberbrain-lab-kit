import assert from 'assert'

const matrixList = {
  v0: {
    '_ID': 'v0',
    '_GROUP_COUNT': 1,
    '_CHANNEL_COUNT': 64
  },
  v1: {
    '_ID': 'v1',
    '_GROUP_COUNT': 17,
    '_CHANNEL_COUNT': 64,
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 0,
    '9': 1,
    '10': 2,
    '11': 3,
    '12': 4,
    '13': 5,
    '14': 6,
    '15': 7,
    '16': 0,
    '17': 1,
    '18': 2,
    '19': 3,
    '20': 4,
    '21': 5,
    '22': 6,
    '23': 7,
    '24': 8,
    '25': 8,
    '26': 8,
    '27': 8,
    '28': 8,
    '29': 8,
    '30': 8,
    '31': 8,
    '32': 9,
    '33': 10,
    '34': 11,
    '35': 12,
    '36': 13,
    '37': 14,
    '38': 15,
    '39': 16,
    '40': 9,
    '41': 10,
    '42': 11,
    '43': 12,
    '44': 13,
    '45': 14,
    '46': 15,
    '47': 16,
    '48': 9,
    '49': 10,
    '50': 11,
    '51': 12,
    '52': 13,
    '53': 14,
    '54': 15,
    '55': 16,
    '56': 9,
    '57': 10,
    '58': 11,
    '59': 12,
    '60': 13,
    '61': 14,
    '62': 15,
    '63': 16
  },
  v2: {
    '_ID': 'v2',
    '_GROUP_COUNT': 18,
    '_CHANNEL_COUNT': 64,
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 0,
    '9': 1,
    '10': 2,
    '11': 3,
    '12': 4,
    '13': 5,
    '14': 6,
    '15': 7,
    '16': 8,
    '17': 8,
    '18': 8,
    '19': 8,
    '20': 8,
    '21': 8,
    '22': 8,
    '23': 8,
    '24': 9,
    '25': 9,
    '26': 9,
    '27': 9,
    '28': 9,
    '29': 9,
    '30': 9,
    '31': 9,
    '32': 10,
    '33': 11,
    '34': 12,
    '35': 13,
    '36': 14,
    '37': 15,
    '38': 16,
    '39': 17,
    '40': 10,
    '41': 11,
    '42': 12,
    '43': 13,
    '44': 14,
    '45': 15,
    '46': 16,
    '47': 17,
    '48': 10,
    '49': 11,
    '50': 12,
    '51': 13,
    '52': 14,
    '53': 15,
    '54': 16,
    '55': 17,
    '56': 10,
    '57': 11,
    '58': 12,
    '59': 13,
    '60': 14,
    '61': 15,
    '62': 16,
    '63': 17
  },
  v3: {
    '_ID': 'v3',
    '_GROUP_COUNT': 16,
    '_CHANNEL_COUNT': 64,
    '0': 0,
    '1': 0,
    '2': 1,
    '3': 1,
    '4': 2,
    '5': 2,
    '6': 3,
    '7': 3,
    '8': 0,
    '9': 0,
    '10': 1,
    '11': 1,
    '12': 2,
    '13': 2,
    '14': 3,
    '15': 3,
    '16': 4,
    '17': 4,
    '18': 5,
    '19': 5,
    '20': 6,
    '21': 6,
    '22': 7,
    '23': 7,
    '24': 4,
    '25': 4,
    '26': 5,
    '27': 5,
    '28': 6,
    '29': 6,
    '30': 7,
    '31': 7,
    '32': 8,
    '33': 8,
    '34': 9,
    '35': 9,
    '36': 10,
    '37': 10,
    '38': 11,
    '39': 11,
    '40': 8,
    '41': 8,
    '42': 9,
    '43': 9,
    '44': 10,
    '45': 10,
    '46': 11,
    '47': 11,
    '48': 12,
    '49': 12,
    '50': 13,
    '51': 13,
    '52': 14,
    '53': 14,
    '54': 15,
    '55': 15,
    '56': 12,
    '57': 12,
    '58': 13,
    '59': 13,
    '60': 14,
    '61': 14,
    '62': 15,
    '63': 15
  }
}

const getMatrixById = function (id) {
  assert.equal(typeof matrixList[id], 'object', 'Requested matrix not found')
  if (id === 'v0') {
    const matrix = Object.assign({}, matrixList.v0)
    for (let i = 0; i < matrix._CHANNEL_COUNT; i++) {
      matrix[i.toString()] = 0
    }
    return matrix
  }
  return matrixList[id]
}

const collectChannelIds = function (matrix, groupId, offset = 0) {
  const results = []
  for (let key in matrix) {
    if (typeof key === 'string' && key[0] !== '_') {
      const intValue = parseInt(key) + offset
      if (matrix[key] === groupId && results.indexOf(intValue) === -1) {
        results.push(intValue)
      }
    }
  }
  return results
}

export default {
  v0: matrixList.v0,
  v1: matrixList.v1,
  v2: matrixList.v2,
  v3: matrixList.v3,
  getMatrixById,
  collectChannelIds
}
